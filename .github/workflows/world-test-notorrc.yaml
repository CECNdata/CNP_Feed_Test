name: 'world-test-notorrc'

on:
  workflow_dispatch:

env:
  repo_name: CECNdata/GA-sec
  retry: 6

jobs:
  last24month:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       include:
         - csv: CNP-Customs-World-total-import-RMB.csv
           line: 0-0
           part: 1-3
         - csv: CNP-Customs-World-total-import-USD.csv
           line: 0-0
           part: 1-3
         - csv: CNP-Customs-World-total-export-RMB.csv
           line: 0-0
           part: 1-3
         - csv: CNP-Customs-World-total-export-USD.csv
           line: 0-0
           part: 1-3
           
           
    steps:
      - name: Checkout codes
        uses: actions/checkout@v3
        with:
          repository: '${{ env.repo_name  }}'
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains you PAT
          ref: main

      - run: docker pull dperson/torproxy
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Build and Run containers
        run: |
              curl https://raw.githubusercontent.com/CECNdata/GA-pub/main/.github/.torrc  | grep -v StrictExitNodes | grep -v  出口节点 > torrc
              docker run -it --name tor -p 8118:8118 -p 9050:9050 -v $(pwd)/torrc:/etc/tor/torrc:ro -d dperson/torproxy 
              timeout 2m bash -c -- 'while [[ `docker logs tor --tail 1 2>&1` != *"Bootstrapped 100"* ]]; do (sleep 5;docker logs tor --tail 1 2>&1);done ' || (docker rm -f tor;docker run -it --name tor -p 8118:8118 -p 9050:9050 -v $(pwd)/torrc:/etc/tor/torrc:ro -d dperson/torproxy); sleep 10
      - name: check ip
        run: |
              curl -Ls https://github.com/ipinfo/cli/releases/download/ipinfo-2.8.1/deb.sh | sh
              ipinfo `curl -sx 127.0.0.1:8118 ifconfig.me`
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          cd customs
          python -m pip install --upgrade pip
          pip install fire
          pip install pipreqs
          pipreqs .
          pip install -r requirements.txt
      - uses: microsoft/playwright-github-action@v1

      - name: Install Playwright
        run: |
            python -m playwright install webkit
      - name: run customs download
        continue-on-error: true
        run: |
            cd feed/CNP-Customs-Test
            export proxy="http://127.0.0.1:8118"
            export http_proxy=$proxy
            export https_proxy=$proxy
            timeout 1800 xvfb-run python run_24m.py  --path mapping/${{matrix.csv}} --line "${{matrix.line}}" --retry ${{env.retry}} --part ${{matrix.part}}
